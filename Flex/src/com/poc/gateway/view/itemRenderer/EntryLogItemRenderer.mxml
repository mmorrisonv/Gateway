<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				width="100%" height="50" autoDrawBackground="false" buttonMode="true"
				creationComplete="group1_creationCompleteHandler(event)" useHandCursor="true"
				height.selected="100%">
	<fx:Script>
		<![CDATA[
			import com.poc.gateway.model.vo.EntryVO;
			
			import mx.events.FlexEvent;
			

			[Bindable]
			private var txtText:String = "";
			public var creationComplete:Boolean = false
			//private var _labelText:String;
			
			
			public var help : ItemRendererHelpers = new ItemRendererHelpers(this ) ; 
			[Bindable] public var entry : EntryVO = new EntryVO()
			
			override public function set data(value:Object):void { 
				super.data = value; 
				this.help.listenForObj(value,EntryVO.UPDATED, this.updateItemRenderer )
				
					
				entry = value as EntryVO
				this.help.disableIfNull( value, new EntryVO, 'entry' );  
				//this.help.setupParent( this.owner ) ;
				//this.help.fxSetup( null, null, this.btnDelete  ) ; 
				this.updateItemRenderer()
			} 
			
			public function updateItemRenderer(e:Event=null)  : void
			{
				txtLbl.text = this.entry.person.Name + ' id:' + this.entry.cardID; 
				this.txtLb2.text = this.entry.startTime.timeStr;
				
				
				if (this.selected == false && this.currentState == 'selected' )
					this.currentState = ''; 
				
				if( this.entry.present == true  )
					rectSignedIn.color = 0xA8C078;
				else
					rectSignedIn.color = 0x606060;

				
				this.taskList.dataProvider = this.entry.Tasks;

			}
			

			public function set labelText(string:String):void
			{
				//this.txtText = string;
				//this._labelText = string; 
				if ( this.creationComplete == false ) return; 
				//this.lblName.text = string; 
			}

			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				this.creationComplete = true
				//this.labelText = this._labelText; 
			}
			

			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:Elastic id="elasticEasing"/>
	</fx:Declarations>
	<s:states> 
		<s:State name="normal"/> 
		<s:State name="hovered"/> 
		<s:State name="disabled"/> 
		<s:State name="selected"/> 
	</s:states> 
	
	<s:transitions>
		<mx:Transition autoReverse="true" toState="*">
			<s:Parallel>
				<s:Resize duration="300" target="{this}"/>
				<s:AnimateColor duration="400"
								targets="{[this.txtLbl,this.txtLb2,this.bgRectFillColor]}"/>
			</s:Parallel>

		</mx:Transition>
	</s:transitions>	
	
	<s:Rect id="bgRect" width="100%" height="100%">
		<s:fill>
			<s:SolidColor id="bgRectFillColor" color="0x3a3a45"
						  color.hovered="0x626271"
						  color.selected="0xeeeeee"/>
		</s:fill>
	</s:Rect>
	
	<s:Group>
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="0x567E3A"
							  color.hovered="0xe7e7e7"
							  color.selected="0xeeeeee"/>
			</s:fill>
		</s:Rect>
	</s:Group>
	
	<s:Group width="100%" height="100%">


		<s:Label id="txtLbl" x="5" width="120" maxHeight="28" color="0" fontSize="12"
				 styleName="grayTxt Arial"
				 color.hovered="0x333333"
				 color.selected="0"/>
		<s:Label id="txtLb2" x="5" y="14" width="120" maxHeight="28" color="0" fontSize="12"
				 styleName="grayTxt Arial"
				 color.hovered="0x333333"
				 color.selected="0"/>
		
		<s:List id="taskList" x="10" y="26" width="120" borderVisible="false"
				contentBackgroundAlpha="0"
				itemRenderer="com.poc.gateway.view.itemRenderer.TaskLogItemRenderer">
			
		</s:List>

<!--		<s:Ellipse  width="4" height="4" top="4" right="10">
			<s:fill>
				<s:SolidColor id="rectRate" color="0x567E3A"/>
			</s:fill>
		</s:Ellipse>-->
		<s:Ellipse right="4" top="4" width="4" height="4">
			<s:fill>
				<s:SolidColor id="rectSignedIn" color="0xA8C078"/>
			</s:fill>
		</s:Ellipse>
		
	</s:Group>
	
	<s:Line left="0" right="0" bottom="0" width="100%">
		<s:stroke> 
			<s:SolidColorStroke color="0x4c4c56"/>
		</s:stroke>
	</s:Line>
	
</s:ItemRenderer>
